import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
import pandas as pd

'''
from sklearn.linear_model import LinearRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.naive_bayes import GaussianNB
'''

#df = pd.read_csv('dataset/reverse_dataset.data')
df = pd.read_csv('dataset/reverse_1-2_dataset.data')
X = np.array(df.drop(['class'], 1))
y = np.array(df['class'])


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2)

'''
clf = LinearRegression()
clf = DecisionTreeClassifier()
clf = GaussianNB()
'''

clf.fit(X_train, y_train)

y_pred = clf.predict(X_test)

accuracy = clf.score(X_test, y_test)

rmse = np.sqrt(mean_squared_error(y_test, y_pred))

print(accuracy)
print(rmse)
